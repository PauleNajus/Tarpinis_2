"""Account locking added, fixed models,forms to accomodate

Revision ID: 9d1e10c1606a
Revises: 9dd9f6a84cff
Create Date: 2024-06-26 10:29:03.096714

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9d1e10c1606a'
down_revision: Union[str, None] = '9dd9f6a84cff'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Orders')
    op.drop_table('Transactions')
    op.drop_table('Items')
    op.drop_table('discount')
    op.drop_table('Cart')
    op.drop_table('OrderItems')
    op.drop_table('Users')
    op.drop_index('ix_product_name', table_name='product')
    op.drop_table('product')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=120), nullable=True),
    sa.Column('price', sa.FLOAT(), nullable=False),
    sa.Column('quantity', sa.INTEGER(), nullable=True),
    sa.Column('description', sa.VARCHAR(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_product_name', 'product', ['name'], unique=1)
    op.create_table('Users',
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(), nullable=False),
    sa.Column('password_hash', sa.VARCHAR(), nullable=False),
    sa.Column('email', sa.VARCHAR(), nullable=False),
    sa.Column('balance', sa.FLOAT(), nullable=True),
    sa.Column('is_admin', sa.INTEGER(), nullable=True),
    sa.Column('lock_until', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('OrderItems',
    sa.Column('order_item_id', sa.INTEGER(), nullable=False),
    sa.Column('order_id', sa.INTEGER(), nullable=False),
    sa.Column('item_id', sa.INTEGER(), nullable=False),
    sa.Column('quantity', sa.INTEGER(), nullable=False),
    sa.Column('price', sa.FLOAT(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['Items.item_id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['Orders.order_id'], ),
    sa.PrimaryKeyConstraint('order_item_id')
    )
    op.create_table('Cart',
    sa.Column('cart_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('item_id', sa.INTEGER(), nullable=False),
    sa.Column('quantity', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['Items.item_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], ),
    sa.PrimaryKeyConstraint('cart_id')
    )
    op.create_table('discount',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('product_id', sa.INTEGER(), nullable=False),
    sa.Column('discount_percentage', sa.FLOAT(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Items',
    sa.Column('item_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.VARCHAR(), nullable=True),
    sa.Column('price', sa.FLOAT(), nullable=False),
    sa.Column('stock', sa.INTEGER(), nullable=False),
    sa.PrimaryKeyConstraint('item_id')
    )
    op.create_table('Transactions',
    sa.Column('transaction_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('amount', sa.FLOAT(), nullable=False),
    sa.Column('transaction_date', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], ),
    sa.PrimaryKeyConstraint('transaction_id')
    )
    op.create_table('Orders',
    sa.Column('order_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('total', sa.FLOAT(), nullable=False),
    sa.Column('order_date', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    # ### end Alembic commands ###
